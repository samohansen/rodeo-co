datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Was this generated by Prisma? How is it so accuarate?
model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum UserType {
  admin
  participant
}

model User {
  id          String  @id @default(cuid())
  email       String  @unique
  // bandaid solution to get Google Auth working
  name        String?
  image       String?
  emailVerified Boolean?
  // end of Google OAuth fields --
  firstName   String?
  lastName    String?
  birthdate   DateTime?
  // horses      Horse[]

  type        UserType @default(admin)     
  rodeos      Rodeo[]       // in practice, should be null for any users of UserType participant
  entries     EventEntry[]  // in practice, should be null for any users of UserType admin

  accounts    Account[]
  sessions    Session[]
}

model Rodeo {
  id        String    @id @default(cuid())
  name      String
  location  String?
  date      DateTime?
  notes     String?
  events    RodeoEvent[]

  admin     User     @relation(fields: [adminId], references: [id])
  adminId   String  
}

model RodeoEvent {
  id        String    @id @default(cuid())
  name      String 
  time      DateTime?
  minAge    Int?
  maxAge    Int?
  fee       Int?
  prize     Int?
  entries   EventEntry[]

  rodeo     Rodeo     @relation(fields: [rodeoId], references: [id])
  rodeoId   String
}

model EventEntry {
  participant   User @relation(fields: [participantId], references: [id])
  participantId String
  event         RodeoEvent  @relation(fields: [eventId], references: [id])
  eventId       String
  // horse     Horse?    @relation(fields: [horseId], references: [id])
  // horseId   String?
  horseName String

  time      Decimal?
  feePaid   Boolean?  @default(false)

  @@id([participantId, eventId, horseName])
}
